{"version":3,"file":"js/235.81db4733.js","mappings":"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","sources":["webpack://sdpo-frontend/./src/helpers/camera.js","webpack://sdpo-frontend/./src/pages/steps/Step-alcometer.vue","webpack://sdpo-frontend/./src/pages/steps/Step-alcometer.vue?b602"],"sourcesContent":["import store from \"@/store\";\nimport { useToast } from \"vue-toastification\";\nconst toast = useToast();\n\nexport async function makePhoto() {\n    return await axios.post(`device/photo`).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\nexport async function getSizes() {\n    return await axios.get(`device/video/size`).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\n\nexport async function makeMedia(driver_id) {\n    return await axios.post(`device/media`, {\n        driver_id,\n    }).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\nexport async function makeVideoTest() {\n    return await axios.post(`device/video/test`).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\nfunction defaultError(error) {\n    if (error.response) {\n        store.$state.loseConnect = true;\n    }\n    \n    console.log(error);\n}","<script>\r\nimport {closeAlcometer, getAlcometerResult} from '@/helpers/alcometer';\r\nimport {makeMedia} from '@/helpers/camera';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      interval: null,\r\n      seconds: 5,\r\n      needRetry: false,\r\n    }\r\n  },\r\n  methods: {\r\n    async saveWebCam() {\r\n      if ((JSON.parse(this.system.camera_photo) && !this.inspection.photo)\r\n          || (JSON.parse(this.system.camera_video) && !this.inspection.video)) {\r\n        const data = await makeMedia(this.$store.state.inspection.driver_id);\r\n        this.inspection.photo = data?.photo;\r\n        this.inspection.video = data?.video;\r\n      }\r\n    },\r\n    async nextStep() {\r\n      this.$router.push({name: 'step-sleep'});\r\n    },\r\n    async prevStep() {\r\n      this.$router.push({name: 'step-thermometer'});\r\n    },\r\n    async retry() {\r\n      this.needRetry = true;\r\n      await closeAlcometer();\r\n      this.runCountdown();\r\n    },\r\n    hasResult(result) {\r\n      return !(result === undefined || result === null || result === 'next');\r\n\r\n    },\r\n    checkRetry(result) {\r\n      return this.system.alcometer_retry && Number(result) > 0 && !this.needRetry;\r\n    },\r\n    runCountdown() {\r\n      this.seconds = 5;\r\n      this.timerInterval = setInterval(() => {\r\n        this.seconds--;\r\n        if (this.seconds < 1) {\r\n          clearInterval(this.timerInterval);\r\n        }\r\n      }, 1000);\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.saveWebCam();\r\n    this.runCountdown()\r\n\r\n    this.requestInterval = setInterval(async () => {\r\n      const result = await getAlcometerResult();\r\n      if (!this.hasResult(result)) {\r\n        return;\r\n      }\r\n      if (this.checkRetry(result)) {\r\n        await this.retry();\r\n        return;\r\n      }\r\n      this.inspection.alcometer_result = Number(result) || 0;\r\n      this.nextStep();\r\n    }, 10000);\r\n  },\r\n  unmounted() {\r\n    clearInterval(this.requestInterval);\r\n    clearInterval(this.timerInterval);\r\n  },\r\n  computed: {\r\n    inspection() {\r\n      return this.$store.state.inspection;\r\n    },\r\n    system() {\r\n      return this.$store.state.config?.system || {};\r\n    },\r\n    status() {\r\n      if (this.seconds === 5) {\r\n        return 'через ' + this.seconds + ' секунд';\r\n      } else if (this.seconds === 1) {\r\n        return 'через ' + this.seconds + ' секунду';\r\n      } else if (this.seconds < 1) {\r\n        return ' прямо сейчас!';\r\n      } else {\r\n        return 'через ' + this.seconds + ' секунды';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<template>\r\n  <div class=\"step-alcometer__outer\">\r\n    <div class=\"step-alcometer\">\r\n      <h3 class=\"animate__animated animate__fadeInDown\">Проверка на алкоголь</h3>\r\n\r\n      <div class=\"step-alcometer__items\">\r\n        <div v-if=\"!needRetry\" class=\"step-alcometer__item animate__animated animate__fadeInUp d-1\">\r\n          <span>1</span>\r\n          <img style=\"padding-right: 20px\" width=\"100\" src=\"@/assets/images/alco_guide.png\">\r\n          <label>Проверьте, что вставлена воронка</label>\r\n        </div>\r\n        <div v-if=\"!needRetry\" class=\"step-alcometer__item animate__animated animate__fadeInUp d-2\">\r\n          <span>2</span>\r\n          <img width=\"100\" src=\"@/assets/images/alco_guide_2.png\">\r\n          Держите алкотестер на расстоянии 2-3 см от рта\r\n        </div>\r\n        <div v-if=\"needRetry\" class=\"step-alcometer__item animate__animated animate__fadeInUp d-1\">\r\n          <span style=\"min-height: 30px\">3</span>\r\n          <img style=\"padding-right: 20px\" width=\"100\" src=\"@/assets/images/alco_guide.png\">\r\n          Снимите воронку , установите мундштук\r\n        </div>\r\n        <div class=\"step-alcometer__text  animate__animated animate__fadeInUp d-2\">\r\n          Дождитесь ГОТОВ на экране алкометра<br><br>\r\n          Начните дуть с умеренной силой до окончания<br>\r\n          звукового сигнала.<br><br>\r\n\r\n          Дуйте {{ status }}\r\n        </div>\r\n      </div>\r\n      <p v-if=\"!needRetry\" class=\"alert red\">\r\n        <i class=\"ri-alarm-warning-fill\"></i>\r\n        НЕ ПРИКАСАТЬСЯ К АЛКОТЕСТЕРУ ГУБАМИ\r\n      </p>\r\n    </div>\r\n    <div class=\"step-buttons\">\r\n      <button @click=\"prevStep()\" class=\"btn opacity blue\">Назад</button>\r\n      <button @click=\"nextStep()\" v-if=\"JSON.parse(system.alcometer_skip)\" class=\"btn\">Продолжить</button>\r\n    </div>\r\n  </div>\r\n</template>","import { render } from \"./Step-alcometer.vue?vue&type=template&id=681dd3b2\"\nimport script from \"./Step-alcometer.vue?vue&type=script&lang=js\"\nexport * from \"./Step-alcometer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\sdpo\\\\sdpo-java-main\\\\sdpo-java-main\\\\src\\\\main\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["useToast","async","makePhoto","axios","post","then","data","catch","defaultError","getSizes","get","makeMedia","driver_id","makeVideoTest","error","response","store","console","log","class","_createElementVNode","style","width","src","_imports_0","_hoisted_6","_hoisted_7","_hoisted_8","_imports_1","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$data","needRetry","_hoisted_5","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_toDisplayString","$options","status","_hoisted_22","_hoisted_23","_hoisted_24","onClick","_cache","$event","prevStep","JSON","parse","system","alcometer_skip","nextStep","interval","seconds","methods","this","camera_photo","inspection","photo","camera_video","video","$store","state","$router","push","name","closeAlcometer","runCountdown","hasResult","result","undefined","checkRetry","alcometer_retry","Number","timerInterval","setInterval","clearInterval","saveWebCam","requestInterval","getAlcometerResult","retry","alcometer_result","unmounted","computed","config","__exports__","render"],"sourceRoot":""}