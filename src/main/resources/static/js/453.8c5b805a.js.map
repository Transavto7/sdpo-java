{"version":3,"file":"js/453.8c5b805a.js","mappings":"kOAEA,MAAMA,GAAQC,EAAAA,EAAAA,MAEPC,eAAeC,IAClB,aAAaC,MAAMC,KAAM,oBAAmBC,MAAK,EAAGC,UACzCA,IACRC,MAAMC,EACb,CAEOP,eAAeQ,IAClB,aAAaN,MAAMC,KAAM,4BAA2BC,MAAK,EAAGC,UACjDA,IACRC,MAAMC,EACb,CAEOP,eAAeS,IAClB,aAAaP,MAAMC,KAAM,eAAcC,MAAK,EAAGC,UACpCA,IACRC,OAAOI,IACNC,QAAQC,IAAIF,EAAM,GAE1B,CAEA,SAASH,EAAaG,GAClB,MAAML,EAAOK,EAAMG,UAAUR,KAC7B,GAAIA,GAAMS,QACNhB,EAAMY,MAAML,EAAKS,cACd,GAAGJ,EAAMG,SACZ,OAAQH,GAAOG,UAAUE,QACrB,KAAK,IAAKjB,EAAMY,MAAM,8BACtB,QAASZ,EAAMY,MAAM,mCAGzBM,EAAAA,EAAAA,OAAAA,aAA2B,EAG/BL,QAAQC,IAAIF,EAChB,C,mGCYSO,MAAM,iB,01BA4BFA,MAAM,gB,0CA5BfC,EAAAA,EAAAA,IAgCM,MAhCNC,EAgCM,CA/BFC,GA2BAC,EAAAA,EAAAA,GAGM,MAHNC,EAGM,EAFFD,EAAAA,EAAAA,GAA4F,UAAnFE,QAAK,eAAEC,EAAAA,QAAQC,KAAK,CAADC,KAAAA,eAAyBT,MAAM,oBAAmB,SACZU,KAAKC,MAAMC,EAAAA,OAAOC,kBAAc,WAAlGZ,EAAAA,EAAAA,IAAoI,U,MAA3HK,QAAK,eAAEC,EAAAA,QAAQC,KAAK,CAADC,KAAAA,sBAAyET,MAAM,OAAM,gBAAU,kB,eA5EvI,GACIZ,OACI,MAAO,CACH0B,SAAU,KAElB,EACA/B,gBACIgC,KAAKD,SAAWE,aAAYjC,UACxB,MAAMkC,QAAejC,EAAAA,EAAAA,WAENkC,IAAXD,GAAmC,OAAXA,GAIb,SAAXA,IAIAA,GAAQE,QACZJ,KAAKK,WAAWD,MAAQF,EAAOE,QAG3BF,GAAQI,UAAYJ,GAAQK,aAC5BP,KAAKK,WAAWG,UAAYN,EAAOI,SAAW,IAAMJ,EAAOK,WAG/DE,cAAcT,KAAKD,UACnBC,KAAKU,QAAQjB,KAAK,CAAEC,KAAM,qBAAqB,GAChD,IACP,EACAiB,YACIF,cAAcT,KAAKD,WACnBvB,EAAAA,EAAAA,KACJ,EACAoC,SAAU,CACNP,aACI,OAAOL,KAAKa,OAAOC,MAAMT,UAC7B,EACAU,SACI,OAAOf,KAAKa,OAAOC,MAAME,QAAQD,QAAU,CAAC,CAChD,I,QCvCR,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://sdpo-frontend/./src/helpers/tonometer.js","webpack://sdpo-frontend/./src/pages/steps/Step-tonometer.vue","webpack://sdpo-frontend/./src/pages/steps/Step-tonometer.vue?bb25"],"sourcesContent":["import store from \"@/store\";\r\nimport { useToast } from \"vue-toastification\";\r\nconst toast = useToast();\r\n\r\nexport async function getPressure() {\r\n    return await axios.post(`device/tonometer`).then(({ data }) => {            \r\n        return data;\r\n    }).catch(defaultError);\r\n}\r\n\r\nexport async function disableTonometer() {\r\n    return await axios.post(`device/tonometer/disable`).then(({ data }) => {            \r\n        return data;\r\n    }).catch(defaultError);\r\n}\r\n\r\nexport async function checkDevices() {\r\n    return await axios.post(`device/scan`).then(({ data }) => {\r\n        return data;\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nfunction defaultError(error) {\r\n    const data = error.response?.data;\r\n    if (data?.message) {\r\n        toast.error(data.message);\r\n    } else if(error.response) {\r\n        switch (error?.response?.status) {\r\n            case 400: toast.error('Ошибка авторизации запроса')\r\n            default: toast.error('Неизвестная ошибка запроса')\r\n        }\r\n    } else {\r\n        store.$state.loseConnect = true;\r\n    }\r\n    \r\n    console.log(error);\r\n}","<script>\r\nimport { getPressure } from '@/helpers/tonometer';\r\nimport { disableTonometer } from '@/helpers/tonometer';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            interval: null,\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.interval = setInterval(async () => {\r\n            const result = await getPressure();\r\n\r\n            if (result === undefined || result === null) {\r\n                return;\r\n            }\r\n\r\n            if (result === 'next') {\r\n                return;\r\n            }\r\n\r\n            if (result?.pulse) {\r\n            this.inspection.pulse = result.pulse;\r\n            }\r\n            \r\n            if (result?.systolic || result?.diastolic) {\r\n                this.inspection.tonometer = result.systolic + '/' + result.diastolic;\r\n            }\r\n\r\n            clearInterval(this.interval);\r\n            this.$router.push({ name: 'step-thermometer' });\r\n        }, 1000);\r\n    },\r\n    unmounted() {\r\n        clearInterval(this.interval);\r\n        disableTonometer();\r\n    },\r\n    computed: {\r\n        inspection() {\r\n            return this.$store.state.inspection;\r\n        },\r\n        system() {\r\n            return this.$store.state.config?.system || {};\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div class=\"step-3__outer\">\r\n        <div class=\"step-3\">\r\n            <h3 class=\"animate__animated animate__fadeInDown\">Измерение артериального давления</h3>\r\n            <div class=\"step-3__items\">\r\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-1\">\r\n                    <span>1</span>\r\n                    Закрепите манжету тонометра на левом плече на 2-3 см выше сгиба локтя\r\n                </div>\r\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-2\">\r\n                    <span>2</span>\r\n                    Положите руку на стол\r\n                </div>\r\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-3\">\r\n                    <span>3</span>\r\n                    Убедитесь, что манжета находится на уровне сердца\r\n                </div>\r\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-4\">\r\n                    <span>4</span>\r\n                    Нажмите кнопку СТАРТ на тонометре\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"step-3__subtext animate__animated animate__fadeInDown d-5\">\r\n                Не двигайтесь, пока идет измерение.<br>\r\n                После окончания измерения снимите манжету\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"step-buttons\">\r\n            <button @click=\"$router.push({ name: 'step-ride' })\" class=\"btn opacity blue\">Назад</button>\r\n            <button @click=\"$router.push({ name: 'step-thermometer' })\" v-if=\"JSON.parse(system.tonometer_skip)\" class=\"btn\">Продолжить</button>\r\n        </div>\r\n    </div>\r\n</template>","import { render } from \"./Step-tonometer.vue?vue&type=template&id=62d00cb8\"\nimport script from \"./Step-tonometer.vue?vue&type=script&lang=js\"\nexport * from \"./Step-tonometer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\ellidey\\\\IdeaProjects\\\\sdpo\\\\src\\\\main\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["toast","useToast","async","getPressure","axios","post","then","data","catch","defaultError","disableTonometer","checkDevices","error","console","log","response","message","status","store","class","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","onClick","_ctx","push","name","JSON","parse","$options","tonometer_skip","interval","this","setInterval","result","undefined","pulse","inspection","systolic","diastolic","tonometer","clearInterval","$router","unmounted","computed","$store","state","system","config","__exports__","render"],"sourceRoot":""}