{"version":3,"file":"js/469.98ae272c.js","mappings":"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","sources":["webpack://sdpo-frontend/./src/helpers/camera.js","webpack://sdpo-frontend/./src/pages/inspection/Step-alcometer.vue","webpack://sdpo-frontend/./src/pages/inspection/Step-alcometer.vue?12cd"],"sourcesContent":["import {defaultError} from \"@/helpers/http-errors\";\n\nexport async function makePhoto() {\n    return await axios.post(`device/photo`).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\nexport async function getSizes() {\n    return await axios.get(`device/video/size`).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\n\nexport async function makeMedia(driver_id) {\n    return await axios.post(`device/media`, {\n        driver_id,\n        restart: false\n    }).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\nexport async function stopMedia(driver_id) {\n    return await axios.post(`device/media`, {\n        driver_id,\n        restart: true\n    }).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}\n\nexport async function makeVideoTest() {\n    return await axios.post(`device/video/test`).then(({ data }) => {\n        return data;\n    }).catch(defaultError);\n}","<script>\r\nimport {\r\n  closeAlcometer,\r\n  enableModeFromSystemConfig,\r\n  enableSlowModeAlcometer,\r\n  getAlcometerResult\r\n} from '@/helpers/alcometer';\r\nimport {makeMedia, stopMedia} from '@/helpers/camera';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      interval: null,\r\n      seconds: 5,\r\n      needRetry: false,\r\n      showRetry: false,\r\n    }\r\n  },\r\n  methods: {\r\n    async saveWebCam() {\r\n      if ((JSON.parse(this.system.camera_photo) && !this.inspection.photo)\r\n          || (JSON.parse(this.system.camera_video) && !this.inspection.video)) {\r\n        const data = await makeMedia(this.$store.state.inspection.driver_id);\r\n        this.inspection.photo = data?.photo;\r\n        this.inspection.video = data?.video;\r\n      }\r\n    },\r\n    async stopWebCam() {\r\n      await stopMedia(this.$store.state.inspection.driver_id);\r\n      this.inspection.photo = null;\r\n      this.inspection.video = null;\r\n    },\r\n    async nextStep() {\r\n      this.$router.push({name: 'step-sleep'});\r\n    },\r\n    async prevStep() {\r\n      this.$router.push({name: 'step-thermometer'});\r\n    },\r\n    async retry() {\r\n      this.needRetry = true;\r\n      setTimeout(() => {\r\n        this.showRetry = true;\r\n      }, 3000);\r\n      await enableSlowModeAlcometer();\r\n      await this.stopWebCam();\r\n      await this.saveWebCam();\r\n      await closeAlcometer();\r\n      this.runCountdown();\r\n    },\r\n    hasResult(result) {\r\n      return !(result === undefined || result === null || result === 'next');\r\n\r\n    },\r\n    checkRetry(result) {\r\n      return this.system.alcometer_fast && this.system.alcometer_retry && Number(result) > 0 && !this.needRetry;\r\n    },\r\n    runCountdown() {\r\n      this.seconds = 5;\r\n      this.timerInterval = setInterval(() => {\r\n        this.seconds--;\r\n        if (this.seconds < 1) {\r\n          clearInterval(this.timerInterval);\r\n        }\r\n      }, 1000);\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.saveWebCam();\r\n    this.runCountdown()\r\n\r\n    this.requestInterval = setInterval(async () => {\r\n      const result = await getAlcometerResult();\r\n      if (!this.hasResult(result)) {\r\n        return;\r\n      }\r\n      if (this.checkRetry(result)) {\r\n        await this.retry();\r\n        return;\r\n      }\r\n      this.inspection.alcometer_result = Number(result) || 0;\r\n      this.inspection.alcometer_mode = this.system.alcometer_fast ? '0' : '1';\r\n      this.nextStep();\r\n    }, 1000);\r\n  },\r\n  unmounted() {\r\n    enableModeFromSystemConfig(this.system.alcometer_fast);\r\n    clearInterval(this.requestInterval);\r\n    clearInterval(this.timerInterval);\r\n  },\r\n  computed: {\r\n    inspection() {\r\n      return this.$store.state.inspection;\r\n    },\r\n    system() {\r\n      return this.$store.state.config?.system || {};\r\n    },\r\n    status() {\r\n      if (this.seconds === 5) {\r\n        return 'через ' + this.seconds + ' секунд';\r\n      } else if (this.seconds === 1) {\r\n        return 'через ' + this.seconds + ' секунду';\r\n      } else if (this.seconds < 1) {\r\n        return ' прямо сейчас!';\r\n      } else {\r\n        return 'через ' + this.seconds + ' секунды';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<template>\r\n  <div class=\"step-alcometer__outer\">\r\n    <div v-if=\"!showRetry\" class=\"step-alcometer\">\r\n      <h3 class=\"animate__animated animate__fadeInDown\">Проверка на алкоголь</h3>\r\n\r\n      <div  class=\"step-alcometer__items\">\r\n        <div class=\"step-alcometer__item animate__animated animate__fadeInUp d-1\">\r\n          <span>1</span>\r\n          <img style=\"padding-right: 20px\" width=\"100\" src=\"@/assets/images/alco_guide.png\">\r\n          <label>Проверьте, что вставлена воронка</label>\r\n        </div>\r\n        <div class=\"step-alcometer__item animate__animated animate__fadeInUp d-2\">\r\n          <span>2</span>\r\n          <img width=\"100\" src=\"@/assets/images/alco_guide_2.png\">\r\n          Держите алкотестер на расстоянии 2-3 см от рта\r\n        </div>\r\n        <div class=\"step-alcometer__text  animate__animated animate__fadeInUp d-2\">\r\n          Дождитесь ГОТОВ на экране алкометра<br><br>\r\n          Начните дуть с умеренной силой до окончания<br>\r\n          звукового сигнала.<br><br>\r\n          <p v-if=\"!needRetry\">Дуйте {{ status }}</p>\r\n          <p v-if=\"needRetry\" style=\"width: 100%\">Результат: Положительный</p>\r\n        </div>\r\n      </div>\r\n      <p v-if=\"!showRetry\" class=\"alert red\">\r\n        <i class=\"ri-alarm-warning-fill\"></i>\r\n        НЕ ПРИКАСАТЬСЯ К АЛКОТЕСТЕРУ ГУБАМИ\r\n      </p>\r\n    </div>\r\n    <div v-if=\"showRetry\" class=\"step-alcometer\">\r\n      <h3  class=\"animate__animated animate__fadeInDown\">Количественное определение алкоголя</h3>\r\n      <div  class=\"step-alcometer__items\">\r\n        <div class=\"step-alcometer__item animate__animated animate__fadeInUp d-1\">\r\n          <span style=\"min-height: 30px\">3</span>\r\n          <img style=\"padding-right: 20px\" width=\"100\" src=\"@/assets/images/alco_guide.png\">\r\n          Снимите воронку , установите мундштук\r\n        </div>\r\n        <div class=\"step-alcometer__text  animate__animated animate__fadeInUp d-2\">\r\n          Снимите мундштук-воронка<br><br>\r\n          Установите индивидуальный мундштук<br><br>\r\n          Дождитесь ГОТОВ на экране алкометра<br><br>\r\n          Начните дуть с умеренной силой до окончания<br>\r\n          звукового сигнала.<br><br>\r\n          Снимите индивидуальный мундштук<br><br>\r\n          Установите мундштук-воронка<br><br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"step-buttons\">\r\n      <button @click=\"prevStep()\" class=\"btn opacity blue\">Назад</button>\r\n      <button @click=\"nextStep()\" v-if=\"JSON.parse(system.alcometer_skip)\" class=\"btn\">Продолжить</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n","import { render } from \"./Step-alcometer.vue?vue&type=template&id=4a5557aa\"\nimport script from \"./Step-alcometer.vue?vue&type=script&lang=js\"\nexport * from \"./Step-alcometer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\sdpo\\\\sdpo-java-main\\\\sdpo-java-main\\\\src\\\\main\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["async","makePhoto","axios","post","then","data","catch","defaultError","getSizes","get","makeMedia","driver_id","restart","stopMedia","makeVideoTest","class","_createElementVNode","style","width","src","_imports_0","_imports_1","_hoisted_18","_createElementBlock","_hoisted_1","$data","showRetry","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","needRetry","_hoisted_13","_toDisplayString","$options","status","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_20","_hoisted_21","onClick","_cache","$event","prevStep","JSON","parse","system","alcometer_skip","nextStep","interval","seconds","methods","this","camera_photo","inspection","photo","camera_video","video","$store","state","$router","push","name","setTimeout","enableSlowModeAlcometer","stopWebCam","saveWebCam","closeAlcometer","runCountdown","hasResult","result","undefined","checkRetry","alcometer_fast","alcometer_retry","Number","timerInterval","setInterval","clearInterval","requestInterval","getAlcometerResult","retry","alcometer_result","alcometer_mode","unmounted","enableModeFromSystemConfig","computed","config","__exports__","render"],"sourceRoot":""}