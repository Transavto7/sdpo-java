{"version":3,"file":"js/453.61bd4555.js","mappings":"0PAEA,MAAMA,GAAQC,EAAAA,EAAAA,MAEPC,eAAeC,IAClB,aAAaC,MAAMC,KAAM,oBAAmBC,MAAK,EAAGC,UACzCA,IACRC,MAAMC,EACb,CAEOP,eAAeQ,IAClB,aAAaN,MAAMC,KAAM,4BAA2BC,MAAK,EAAGC,UACjDA,IACRC,MAAMC,EACb,CAEOP,eAAeS,EAAcC,EAAS,WACzC,aAAaR,MAAMC,KAAK,2BAA4B,CAChDO,WACDN,MAAK,EAAGC,UACAA,IACRC,MAAMC,EACb,CAEOP,eAAeW,IAClB,aAAaT,MAAMC,KAAM,eAAcC,MAAK,EAAGC,UACpCA,IACRC,OAAOM,IACNC,QAAQC,IAAIF,EAAM,GAE1B,CAEA,SAASL,EAAaK,GAClB,MAAMP,EAAOO,EAAMG,UAAUV,KAC7B,GAAIA,GAAMW,QACNlB,EAAMc,MAAMP,EAAKW,cACd,GAAGJ,EAAMG,SACZ,OAAQH,GAAOG,UAAUL,QACrB,KAAK,IAAKZ,EAAMc,MAAM,8BACtB,QAASd,EAAMc,MAAM,mCAGzBK,EAAAA,EAAAA,OAAAA,aAA2B,EAG/BJ,QAAQC,IAAIF,EAChB,C,mGCISM,MAAM,iB,01BA4BFA,MAAM,gB,0CA5BfC,EAAAA,EAAAA,IAgCM,MAhCNC,EAgCM,CA/BFC,GA2BAC,EAAAA,EAAAA,GAGM,MAHNC,EAGM,EAFFD,EAAAA,EAAAA,GAA4F,UAAnFE,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,QAAQC,KAAK,CAADC,KAAA,eAAyBZ,MAAM,oBAAmB,SACZa,KAAKC,MAAMC,EAAAC,OAAOC,kBAAc,WAAlGhB,EAAAA,EAAAA,IAAoI,U,MAA3HK,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,QAAQC,KAAK,CAADC,KAAA,sBAAyEZ,MAAM,OAAM,gBAAU,kB,eA5EvI,GACIb,OACI,MAAO,CACH+B,SAAU,KAElB,EACApC,gBACIqC,KAAKD,SAAWE,aAAYtC,UACxB,MAAMuC,QAAetC,EAAAA,EAAAA,WAENuC,IAAXD,GAAmC,OAAXA,GAIb,SAAXA,IAIAA,GAAQE,QACZJ,KAAKK,WAAWD,MAAQF,EAAOE,QAG3BF,GAAQI,UAAYJ,GAAQK,aAC5BP,KAAKK,WAAWG,UAAYN,EAAOI,SAAW,IAAMJ,EAAOK,WAG/DE,cAAcT,KAAKD,UACnBC,KAAKT,QAAQC,KAAK,CAAEC,KAAM,qBAAqB,GAChD,IACP,EACAiB,YACID,cAAcT,KAAKD,WACnB5B,EAAAA,EAAAA,KACJ,EACAwC,SAAU,CACNN,aACI,OAAOL,KAAKY,OAAOC,MAAMR,UAC7B,EACAR,SACI,OAAOG,KAAKY,OAAOC,MAAMC,QAAQjB,QAAU,CAAC,CAChD,I,QCvCR,MAAMkB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://sdpo-frontend/./src/helpers/tonometer.js","webpack://sdpo-frontend/./src/pages/steps/Step-tonometer.vue","webpack://sdpo-frontend/./src/pages/steps/Step-tonometer.vue?bb25"],"sourcesContent":["import store from \"@/store\";\nimport { useToast } from \"vue-toastification\";\nconst toast = useToast();\n\nexport async function getPressure() {\n    return await axios.post(`device/tonometer`).then(({ data }) => {            \n        return data;\n    }).catch(defaultError);\n}\n\nexport async function disableTonometer() {\n    return await axios.post(`device/tonometer/disable`).then(({ data }) => {            \n        return data;\n    }).catch(defaultError);\n}\n\nexport async function setConnection(status = 'connect') {\n    return await axios.post('device/tonometer/connect', {\n        status, \n    }).then(({ data }) => {            \n        return data;\n    }).catch(defaultError);\n}\n\nexport async function checkDevices() {\n    return await axios.post(`device/scan`).then(({ data }) => {\n        return data;\n    }).catch((error) => {\n        console.log(error);\n    });\n}\n\nfunction defaultError(error) {\n    const data = error.response?.data;\n    if (data?.message) {\n        toast.error(data.message);\n    } else if(error.response) {\n        switch (error?.response?.status) {\n            case 400: toast.error('Ошибка авторизации запроса')\n            default: toast.error('Неизвестная ошибка запроса')\n        }\n    } else {\n        store.$state.loseConnect = true;\n    }\n    \n    console.log(error);\n}","<script>\nimport { getPressure } from '@/helpers/tonometer';\nimport { disableTonometer } from '@/helpers/tonometer';\n\nexport default {\n    data() {\n        return {\n            interval: null,\n        }\n    },\n    async mounted() {\n        this.interval = setInterval(async () => {\n            const result = await getPressure();\n\n            if (result === undefined || result === null) {\n                return;\n            }\n\n            if (result === 'next') {\n                return;\n            }\n\n            if (result?.pulse) {\n            this.inspection.pulse = result.pulse;\n            }\n            \n            if (result?.systolic || result?.diastolic) {\n                this.inspection.tonometer = result.systolic + '/' + result.diastolic;\n            }\n\n            clearInterval(this.interval);\n            this.$router.push({ name: 'step-thermometer' });\n        }, 1000);\n    },\n    unmounted() {\n        clearInterval(this.interval);\n        disableTonometer();\n    },\n    computed: {\n        inspection() {\n            return this.$store.state.inspection;\n        },\n        system() {\n            return this.$store.state.config?.system || {};\n        }\n    }\n}\n</script>\n\n<template>\n    <div class=\"step-3__outer\">\n        <div class=\"step-3\">\n            <h3 class=\"animate__animated animate__fadeInDown\">Измерение артериального давления</h3>\n            <div class=\"step-3__items\">\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-1\">\n                    <span>1</span>\n                    Закрепите манжету тонометра на левом плече на 2-3 см выше сгиба локтя\n                </div>\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-2\">\n                    <span>2</span>\n                    Положите руку на стол\n                </div>\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-3\">\n                    <span>3</span>\n                    Убедитесь, что манжета находится на уровне сердца\n                </div>\n                <div class=\"step-3__item animate__animated animate__fadeInDown d-4\">\n                    <span>4</span>\n                    Нажмите кнопку СТАРТ на тонометре\n                </div>\n            </div>\n\n            <div class=\"step-3__subtext animate__animated animate__fadeInDown d-5\">\n                Не двигайтесь, пока идет измерение.<br>\n                После окончания измерения снимите манжету\n            </div>\n        </div>\n\n        <div class=\"step-buttons\">\n            <button @click=\"$router.push({ name: 'step-ride' })\" class=\"btn opacity blue\">Назад</button>\n            <button @click=\"$router.push({ name: 'step-thermometer' })\" v-if=\"JSON.parse(system.tonometer_skip)\" class=\"btn\">Продолжить</button>\n        </div>\n    </div>\n</template>","import { render } from \"./Step-tonometer.vue?vue&type=template&id=62d00cb8\"\nimport script from \"./Step-tonometer.vue?vue&type=script&lang=js\"\nexport * from \"./Step-tonometer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Project\\\\WORK\\\\Transavto7sdpo\\\\src\\\\main\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["toast","useToast","async","getPressure","axios","post","then","data","catch","defaultError","disableTonometer","setConnection","status","checkDevices","error","console","log","response","message","store","class","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","onClick","_cache","$event","_ctx","$router","push","name","JSON","parse","$options","system","tonometer_skip","interval","this","setInterval","result","undefined","pulse","inspection","systolic","diastolic","tonometer","clearInterval","unmounted","computed","$store","state","config","__exports__","render"],"sourceRoot":""}